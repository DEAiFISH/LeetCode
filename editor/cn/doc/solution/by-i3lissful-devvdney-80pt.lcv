> 关于我：微信公众号：**面试官问**，原创高质量面试题，始于面试题，但不止于面试题。萌新解题】系列文章试图从新人的角度去看待和解决力扣题目。

## 前置知识点

无

## 解题说明

本题类似[【萌新解题】两数相加](https://leetcode.cn/problems/linked-list-cycle/solution/by-i3lissful-devvdney-ykv7/)，核心都是加法操作，不过一个是十进制加法，一个是二进制加法。一个最直接的解法是先将二进制数转换成十进制数，相加得到的十进制结果后，再转换成二进制，但这种解法可能会存在整型溢出，因此， 还是老老实实进行按位模拟二进制加法，代码如下所示：

* java

```java
class Solution {
    public String addBinary(String a, String b) {
        StringBuilder sb = new StringBuilder();

        int i = a.length()-1;
        int j = b.length()-1;

        // 进位
        int carry = 0;

        // 从字符串右边往左边逐个字符遍历
        while (i >= 0 || j >= 0) {
            // 字符串 a 对应的字符
            int digitA = 0;
            if (i >= 0) {
                digitA = a.charAt(i) - '0';
            }

            // 字符串 b 对应的字符
            int digitB = 0;
            if (j >= 0) {
                digitB = b.charAt(j) - '0';
            }

            // sum 的可能取值是 0，1，2
            int sum = digitA + digitB + carry;
            // 当两数相加大于等于2，说明要进位
            carry = sum >= 2 ? 1 : 0;
            // 进位后，得减去2，才得到当前两数相加后得到的数字
            sum = sum >= 2 ? sum - 2 : sum;

            // 记得挪动i和j的指针
            i--;
            j--;
            
            sb.append(sum);
        }

        // 最后，进位不为0时，说明还有最高位的数字是1
        if (carry == 1) {
            sb.append(1);
        }

        // 最后记得反转下字符串
        return sb.reverse().toString();
    }
}
```

## 参考资料

* [《剑指 Offer（专项突破版）：数据结构与算法名企面试题精讲》](https://weread.qq.com/web/bookDetail/4e132bc07263ff664e11075)

