## 通用解法

为了让解法更具有一般性，我们将原问题的「保留 2 位」修改为「保留 k 位」。

对于此类问题，我们应该进行如下考虑：

* 由于是保留 `k` 个相同数字，**对于前 `k` 个数字，我们可以直接保留**
* 对于后面的任意数字，能够保留的前提是：**与当前写入的位置前面的第 `k` 个元素进行比较，不相同则保留**

举个🌰，我们令 `k=2`，假设有如下样例

[1,1,1,1,1,1,2,2,2,2,2,2,3]

1. 首先我们先让前 2 位直接保留，得到 1,1
2. 对后面的每一位进行继续遍历，能够保留的前提是与当前位置的前面 `k` 个元素不同（答案中的第一个 1），因此我们会跳过剩余的 1，将第一个 2 追加，得到 1,1,2
3. 继续这个过程，这时候是和答案中的第 2 个 1 进行对比，因此可以得到 1,1,2,2
4. 这时候和答案中的第 1 个 2 比较，只有与其不同的元素能追加到答案，因此剩余的 2 被跳过，3 被追加到答案：1,1,2,2,3

**代码（感谢 [@Qian](/u/qiank/) 、[@宫水三叶的小迷妹](/u/san_ye_fen/) 和 [@007](/u/007-v8/) 三位同学提供的其他语言版本）：**

* []

```Java
class Solution {
    public int removeDuplicates(int[] nums) {   
        return process(nums, 2);
    }
    int process(int[] nums, int k) {
        int u = 0; 
        for (int x : nums) {
            if (u < k || nums[u - k] != x) nums[u++] = x;
        }
        return u;
    }
}
```

* []

```C++
class Solution {
public:
    int work(vector<int>& nums, int k) {
        int len = 0;
        for(auto num : nums)
            if(len < k || nums[len-k] != num)
                nums[len++] = num;
        return len;
    }
    int removeDuplicates(vector<int>& nums) {
        return work(nums, 2);
    }
};
```

* []

```Python
class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        def solve(k):
            u = 0
            for x in nums:
                if u < k or nums[u - k] != x:
                    nums[u] = x
                    u += 1
            return u
        return solve(2)
```

* []

```Golang
func removeDuplicates(nums []int) int {
	var process func(k int) int
	process = func(k int) int {
		u := 0
		for _, v := range nums {
			if u < k || nums[u-k] != v {
				nums[u] = v
				u++
			}
		}
		return u
	}
	return process(2)
}
```

* 时间复杂度：$O(n)$
* 空间复杂度：$O(1)$

***

## 其他

**这是一种针对「数据有序，相同元素保留 `k` 位」问题更加本质的解法，该解法是从性质出发提炼的，利用了「数组有序 & 保留逻辑」两大主要性质。**

当你掌握这种通解之后，要解决 [26. 删除有序数组中的重复项](https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/) ，只需要改上述代码一个数字即可（将相同数字保留 2 个修改为保留 1 个）。

这种通解最早我也在 [【宫水三叶】「双指针」&「通用」解法](https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/solution/shua-chuan-lc-jian-ji-shuang-zhi-zhen-ji-2eg8/) 讲过。

---

## 最后

**如果有帮助到你，请给题解点个赞和收藏，让更多的人看到 ~ ("▔□▔)/**

也欢迎你 [关注我](https://oscimg.oschina.net/oscnet/up-19688dc1af05cf8bdea43b2a863038ab9e5.png)（公主号后台回复「送书」即可参与长期看题解学算法送实体书活动）或 加入[「组队打卡」](https://leetcode-cn.com/u/ac_oier/)小群 ，提供写「证明」&「思路」的高质量题解。

所有题解已经加入 [刷题指南](https://github.com/SharingSource/LogicStack-LeetCode/wiki)，欢迎 star 哦 ~
