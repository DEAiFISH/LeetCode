### 解题思路

使用双指针去寻找不一样的值,值得至于的是由于开头创建的头部val为0,注意出现链表值全为0的情况
编码缺陷:链表基础严重不足,空间想象力缺乏

### 代码

* java

```java
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {    
 
    // 删除重复链表
    public ListNode deleteDuplicates(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode listnode = new ListNode(0, head); // 创建一个以0为开头的链表
        ListNode left = listnode.next, right = listnode.next; // TODO 如果输入的链表值为0 呢? 所以左右指针向后一格放置
        while (left != null && left.next != null) { // TODO 双指针的左边为空时代表遍历完毕
            while(right != null && left.val == right.val) { // 如果值相等的话递推寻找下一个值不相等的节点
                right = right.next;
            }
            // System.out.println(right == null);
            left.next = right;
            left = left.next;
        }
        return listnode.next;
    }
}
```

