以下面的图形为例：

* 

```
P     I    N
A   L S  O G
Y A   H R
P     Y
```

按行添加字符，首先算出当前字符$i$（假设为第四列的S）和下一个相同位置，即隔了一个Z的字符（S对应的G）之间的周期 $t = 2 \times numRows - 2$。重点在于两个字符之间可能还存在有一个该行的字符（S和G之间的O），设其位置为 $j$ ，由于 $i$ (S) 与 $j$ (O) 关于下方转折字符（第四列的Y）对称，转折字符 (Y) 的位置为 $k \times t + (numRows - 1)$
$(i+j)/2 = k \times t + (numRows - 1)$
等价于
$(i+j) = 2 \times [k \times t + (numRows - 1)]$
因此有
$j = 2 \times [k \times t + (numRows - 1)] - i$
其中 $k$ 为周期数。

* 

```
class Solution {
    public String convert(String s, int numRows) {
        if (numRows == 1)
            return s;
        StringBuilder stringBuilder = new StringBuilder();
        int t = 2 * numRows - 2;
        for (int r = 0; r < numRows; r++) {
            for (int k = 0, i = r; i < s.length(); i += t, k++) {
                stringBuilder.append(s.charAt(i));
                int j = 2 * (k * t + (numRows - 1)) - i;
                if (i != j && i + t != j && j < s.length())
                    stringBuilder.append(s.charAt(j));
            }
        }
        return stringBuilder.toString();
    }
}
```

