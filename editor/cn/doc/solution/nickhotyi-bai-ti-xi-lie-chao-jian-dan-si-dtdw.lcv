### 全行注解，方便理解~

🌇 点赞 👍 收藏 ⭐留言 📝 一键三连 ~关注Nick，从你我做起！

### 方法一：栈 模拟

**核心思路：利用栈的先进先出原理，模拟括号匹配！**
1. 遇见左括号就进行进栈操作
2. 遇见右括号就判断，首先判断栈是否为空，为空则说明前面无匹配的左括号直接返回false
3. 如果不为空才继续判断栈顶是不是符号是不是与其相对应的左括号
4. 如果是，则进行出栈操作
5. 如果不是，则进行进栈操作　　　

##### 最后结果就是判断栈内是否还有元素即可，有元素则说明不是合法括号！

### 执行效率图

![image.png](https://pic.leetcode-cn.com/1644567292-yWKLMG-image.png)

### 代码

* java

```java
class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        for (char c : s.toCharArray()){
            if(c == '(' || c == '{' || c == '['){
                stack.push(c);
            }else if(!stack.isEmpty()){
                switch (c){
                    case ')':{
                        if (stack.peek() == '('){
                            stack.pop();
                        }else {
                            stack.push(c);
                        }
                        break;
                    }
                    case ']':{
                        if (stack.peek() == '['){
                            stack.pop();
                        }else {
                            stack.push(c);
                        }
                        break;
                    }
                    case '}':{
                        if (stack.peek() == '{'){
                            stack.pop();
                        }else {
                            stack.push(c);
                        }
                        break;
                    }
                }
            }else {
                return false;
            }
        }
        return stack.isEmpty();
    }
}
```

