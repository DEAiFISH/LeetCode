### 解题思路

动态规划
状态转移方程难想到

只有当前位置i为')'时才可能为有效括号
1. 若s[i] == '(', dp[i] = i>1 ? dp[i-2]+2 : 2; 例如："()()"、"()"
2. 若s[i] == ')'：
   - 判断dp[i-1]是否是有效括号，若不是，则dp[i]也不是。若是，继续下一步。
   - 位置i减去dp[i-1]有效括号的长度再减1，看该位置是否是'('，
   - 若不是，则当前位置i不是有效括号；
   - 若是，则当前位置i的有效括号长度dp[i],就等于dp[i-1]的长度，加上2，再加上当前位置i所对应的'('的前一个位置的有效括号长度dp[i-dp[i-1]-2]，还应满足"i-dp[i-1]-2>=0"。

### 代码

* java

```java
class Solution {
    public int longestValidParentheses(String s) {
        int res = 0;
        int n = s.length();
        int[] dp = new int[n];
        for(int i = 1; i < n; i++) {
            if(s.charAt(i) == ')'){
                if(s.charAt(i-1) == '(') {
                    dp[i] = i>1 ? dp[i-2]+2 : 2;
                } else {
                    if(i-dp[i-1] > 0 && s.charAt(i-dp[i-1]-1) == '(') {
                        dp[i] = dp[i-1] + (i-dp[i-1]-2 >= 0 ? dp[i-dp[i-1]-2] : 0) + 2;
                    }
                }
            }
            res = Math.max(res, dp[i]);
        }
        return res;
    }
}
```

