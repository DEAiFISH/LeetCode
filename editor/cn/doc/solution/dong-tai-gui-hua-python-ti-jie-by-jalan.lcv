#### 解题思路：

题目要求 $O(n)$ 复杂度。

- 用哈希表存储每个端点值对应连续区间的长度
- 若数已在哈希表中：跳过不做处理
- 若是新数加入：
  - 取出其左右相邻数已有的连续区间长度 `left` 和 `right`
  - 计算当前数的区间长度为：`cur_length = left + right + 1`
  - 根据 cur_length 更新最大长度 max_length 的值
  - 更新区间两端点的长度值

* []

```Python
class Solution(object):
    def longestConsecutive(self, nums):
        hash_dict = dict()
        
        max_length = 0
        for num in nums:
            if num not in hash_dict:
                left = hash_dict.get(num - 1, 0)
                right = hash_dict.get(num + 1, 0)
                
                cur_length = 1 + left + right
                if cur_length > max_length:
                    max_length = cur_length
                
                hash_dict[num] = cur_length
                hash_dict[num - left] = cur_length
                hash_dict[num + right] = cur_length
                
        return max_length
```

----

